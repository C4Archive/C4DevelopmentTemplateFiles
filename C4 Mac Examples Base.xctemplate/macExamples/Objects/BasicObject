//
//  CFACanvas.h
//  CodeSamples
//
//	A Cocoa For Artists project
//  Created by Travis Kirton
//

/*
When creating a new class it is better to create a new set of .h and .m files

But, for the sake of simplicity, we are adding an interface and an implementation
directly to our canvas class...

If you do it this way, you need to have the new class interface written out first, before the canvas calls it
*/

////////////////////////////////////////////////////////////////
// The Basic Object
////////////////////////////////////////////////////////////////

@interface BasicObject : CFAObject {
CFAColor *randomColor;
NSPoint position;
}
@end

@implementation BasicObject 

- (id)init
{
self = [super init];
if (self) {
randomColor = [[CFAColor colorWithRed:FLOAT_FROM_255([CFAMath randomInt:255])
green:FLOAT_FROM_255([CFAMath randomInt:255])
blue:FLOAT_FROM_255([CFAMath randomInt:255])] retain];
position = NSMakePoint([CFAMath randomInt:400], [CFAMath randomInt:320]);
}
return self;
}

-(void)draw {
[CFAShape noStroke];
[CFAShape fillColor:randomColor];
[CFAShape circleAt:position radius:30];
}

@end

////////////////////////////////////////////////////////////////
// The Canvas
////////////////////////////////////////////////////////////////

#import "CFACanvas.h"

BasicObject *basicObj;

@implementation CFACanvas
-(void)setup {
[self windowWidth:400 andHeight:320];
basicObj = [[[BasicObject alloc] init] retain];
}

-(void)draw {
[self background:0 alpha:0.005];
[basicObj draw];
}
@end